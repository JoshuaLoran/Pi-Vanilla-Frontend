{
  "{\"sourceRoot\":\"/home/pi/light-test/test/Vanillatest\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pi/light-test/test/Vanillatest\",\"filename\":\"/home/pi/light-test/test/Vanillatest/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pi/light-test/test/Vanillatest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pi/light-test/test/Vanillatest",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pi/light-test/test/Vanillatest",
      "filename": "/home/pi/light-test/test/Vanillatest/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pi/light-test/test/Vanillatest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pi/light-test/test/Vanillatest/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pi/light-test/test/Vanillatest/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pi/light-test/test/Vanillatest",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconsole.log('Starting...');\n\nvar fetch = require('node-fetch');\n\nvar Gpio = require('onoff').Gpio; //include onoff to interact with the GPIO\n\n\nvar LED1 = new Gpio(4, 'out'); //use GPIO pin 4, and specify that it is output\n\nvar LED17 = new Gpio(17, 'out');\nvar URL = 'https://agile-reef-99245.herokuapp.com/';\nfetch(URL + 'login', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n    Accept: 'application/json'\n  },\n  body: JSON.stringify({\n    user: {\n      username: 'Pi',\n      password: '1'\n    }\n  })\n}).then(function (r) {\n  return r.json();\n}).then(function (data) {\n  return getDevices(data.jwt);\n});\n\nfunction getDevices(jwt) {\n  var config = {\n    method: 'GET',\n    headers: {\n      'Content-Type': 'application/json',\n      Accept: 'application/json',\n      Authorization: \"Bearer \".concat(jwt)\n    }\n  };\n  fetch(URL + 'devices', config).then(function (r) {\n    return r.json();\n  }).then(function (data) {\n    return controlDevices(data, jwt);\n  });\n}\n\nfunction controlDevices(devices, jwt) {\n  console.log(devices);\n  devices.forEach(function (ele) {\n    if (ele.id === 1) {\n      if (ele.commands[0] === 'on') {\n        LED1.writeSync(1);\n        getDevices(jwt);\n      } else {\n        LED1.writeSync(0);\n        getDevices(jwt);\n      }\n    }\n\n    if (ele.id === 2) {\n      if (ele.commands[0] === 'on') {\n        LED17.writeSync(1);\n        getDevices(jwt);\n      } else {\n        LED17.writeSync(0);\n        getDevices(jwt);\n      }\n    }\n  });\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJmZXRjaCIsInJlcXVpcmUiLCJHcGlvIiwiTEVEMSIsIkxFRDE3IiwiVVJMIiwibWV0aG9kIiwiaGVhZGVycyIsIkFjY2VwdCIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidXNlciIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJ0aGVuIiwiciIsImpzb24iLCJkYXRhIiwiZ2V0RGV2aWNlcyIsImp3dCIsImNvbmZpZyIsIkF1dGhvcml6YXRpb24iLCJjb250cm9sRGV2aWNlcyIsImRldmljZXMiLCJmb3JFYWNoIiwiZWxlIiwiaWQiLCJjb21tYW5kcyIsIndyaXRlU3luYyJdLCJtYXBwaW5ncyI6Ijs7QUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksYUFBWjs7QUFDQSxJQUFNQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQyxZQUFELENBQXJCOztBQUNBLElBQUlDLElBQUksR0FBR0QsT0FBTyxDQUFDLE9BQUQsQ0FBUCxDQUFpQkMsSUFBNUIsQyxDQUFrQzs7O0FBQ2xDLElBQUlDLElBQUksR0FBRyxJQUFJRCxJQUFKLENBQVMsQ0FBVCxFQUFZLEtBQVosQ0FBWCxDLENBQStCOztBQUMvQixJQUFJRSxLQUFLLEdBQUcsSUFBSUYsSUFBSixDQUFTLEVBQVQsRUFBYSxLQUFiLENBQVo7QUFDQSxJQUFNRyxHQUFHLEdBQUcseUNBQVo7QUFHRUwsS0FBSyxDQUFDSyxHQUFHLEdBQUcsT0FBUCxFQUFnQjtBQUNyQkMsRUFBQUEsTUFBTSxFQUFFLE1BRGE7QUFFckJDLEVBQUFBLE9BQU8sRUFBRTtBQUNQLG9CQUFnQixrQkFEVDtBQUVUQyxJQUFBQSxNQUFNLEVBQUU7QUFGQyxHQUZZO0FBTXJCQyxFQUFBQSxJQUFJLEVBQUVDLElBQUksQ0FBQ0MsU0FBTCxDQUFlO0FBQ25CQyxJQUFBQSxJQUFJLEVBQUU7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLElBRE47QUFFSkMsTUFBQUEsUUFBUSxFQUFFO0FBRk47QUFEYSxHQUFmO0FBTmUsQ0FBaEIsQ0FBTCxDQWFEQyxJQWJDLENBYUksVUFBQUMsQ0FBQztBQUFBLFNBQUlBLENBQUMsQ0FBQ0MsSUFBRixFQUFKO0FBQUEsQ0FiTCxFQWNERixJQWRDLENBY0ksVUFBQUcsSUFBSTtBQUFBLFNBQUlDLFVBQVUsQ0FBQ0QsSUFBSSxDQUFDRSxHQUFOLENBQWQ7QUFBQSxDQWRSOztBQWdCRixTQUFTRCxVQUFULENBQW9CQyxHQUFwQixFQUF5QjtBQUNyQixNQUFJQyxNQUFNLEdBQUc7QUFDWGYsSUFBQUEsTUFBTSxFQUFFLEtBREc7QUFFWEMsSUFBQUEsT0FBTyxFQUFFO0FBQ1Asc0JBQWdCLGtCQURUO0FBRVBDLE1BQUFBLE1BQU0sRUFBRSxrQkFGRDtBQUdQYyxNQUFBQSxhQUFhLG1CQUFZRixHQUFaO0FBSE47QUFGRSxHQUFiO0FBUUFwQixFQUFBQSxLQUFLLENBQUNLLEdBQUcsR0FBRyxTQUFQLEVBQWtCZ0IsTUFBbEIsQ0FBTCxDQUNHTixJQURILENBQ1EsVUFBQUMsQ0FBQztBQUFBLFdBQUlBLENBQUMsQ0FBQ0MsSUFBRixFQUFKO0FBQUEsR0FEVCxFQUVHRixJQUZILENBRVMsVUFBQUcsSUFBSTtBQUFBLFdBQUlLLGNBQWMsQ0FBQ0wsSUFBRCxFQUFPRSxHQUFQLENBQWxCO0FBQUEsR0FGYjtBQUdEOztBQUVILFNBQVNHLGNBQVQsQ0FBd0JDLE9BQXhCLEVBQWlDSixHQUFqQyxFQUFxQztBQUNqQ3RCLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZeUIsT0FBWjtBQUNBQSxFQUFBQSxPQUFPLENBQUNDLE9BQVIsQ0FBZ0IsVUFBQUMsR0FBRyxFQUFJO0FBQ3JCLFFBQUdBLEdBQUcsQ0FBQ0MsRUFBSixLQUFXLENBQWQsRUFBZ0I7QUFDZCxVQUFHRCxHQUFHLENBQUNFLFFBQUosQ0FBYSxDQUFiLE1BQWtCLElBQXJCLEVBQTBCO0FBQ3hCekIsUUFBQUEsSUFBSSxDQUFDMEIsU0FBTCxDQUFlLENBQWY7QUFDQVYsUUFBQUEsVUFBVSxDQUFDQyxHQUFELENBQVY7QUFDRCxPQUhELE1BR087QUFDTGpCLFFBQUFBLElBQUksQ0FBQzBCLFNBQUwsQ0FBZSxDQUFmO0FBQ0FWLFFBQUFBLFVBQVUsQ0FBQ0MsR0FBRCxDQUFWO0FBQ0Q7QUFDRjs7QUFDRCxRQUFHTSxHQUFHLENBQUNDLEVBQUosS0FBVyxDQUFkLEVBQWdCO0FBQ2QsVUFBR0QsR0FBRyxDQUFDRSxRQUFKLENBQWEsQ0FBYixNQUFrQixJQUFyQixFQUEwQjtBQUN4QnhCLFFBQUFBLEtBQUssQ0FBQ3lCLFNBQU4sQ0FBZ0IsQ0FBaEI7QUFDQVYsUUFBQUEsVUFBVSxDQUFDQyxHQUFELENBQVY7QUFDRCxPQUhELE1BR087QUFDTGhCLFFBQUFBLEtBQUssQ0FBQ3lCLFNBQU4sQ0FBZ0IsQ0FBaEI7QUFDQVYsUUFBQUEsVUFBVSxDQUFDQyxHQUFELENBQVY7QUFDRDtBQUNGO0FBRUYsR0FwQkQ7QUFxQkQiLCJzb3VyY2VSb290IjoiL2hvbWUvcGkvbGlnaHQtdGVzdC90ZXN0L1ZhbmlsbGF0ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coJ1N0YXJ0aW5nLi4uJylcbmNvbnN0IGZldGNoID0gcmVxdWlyZSgnbm9kZS1mZXRjaCcpO1xudmFyIEdwaW8gPSByZXF1aXJlKCdvbm9mZicpLkdwaW87IC8vaW5jbHVkZSBvbm9mZiB0byBpbnRlcmFjdCB3aXRoIHRoZSBHUElPXG52YXIgTEVEMSA9IG5ldyBHcGlvKDQsICdvdXQnKTsgLy91c2UgR1BJTyBwaW4gNCwgYW5kIHNwZWNpZnkgdGhhdCBpdCBpcyBvdXRwdXRcbnZhciBMRUQxNyA9IG5ldyBHcGlvKDE3LCAnb3V0Jyk7XG5jb25zdCBVUkwgPSAnaHR0cHM6Ly9hZ2lsZS1yZWVmLTk5MjQ1Lmhlcm9rdWFwcC5jb20vJ1xuXG5cbiAgZmV0Y2goVVJMICsgJ2xvZ2luJywge1xuICBtZXRob2Q6ICdQT1NUJyxcbiAgaGVhZGVyczoge1xuICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nXG4gIH0sXG4gIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICB1c2VyOiB7XG4gICAgICB1c2VybmFtZTogJ1BpJyxcbiAgICAgIHBhc3N3b3JkOiAnMSdcbiAgICB9XG4gIH0pXG59KVxuLnRoZW4ociA9PiByLmpzb24oKSlcbi50aGVuKGRhdGEgPT4gZ2V0RGV2aWNlcyhkYXRhLmp3dCkpXG5cbmZ1bmN0aW9uIGdldERldmljZXMoand0KSB7XG4gICAgbGV0IGNvbmZpZyA9IHtcbiAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICBoZWFkZXJzOiB7XG4gICAgICAgICdDb250ZW50LVR5cGUnOiAnYXBwbGljYXRpb24vanNvbicsXG4gICAgICAgIEFjY2VwdDogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICBBdXRob3JpemF0aW9uOiBgQmVhcmVyICR7and0fWBcbiAgICAgIH1cbiAgICB9XG4gICAgZmV0Y2goVVJMICsgJ2RldmljZXMnLCBjb25maWcpXG4gICAgICAudGhlbihyID0+IHIuanNvbigpKVxuICAgICAgLnRoZW4gKGRhdGEgPT4gY29udHJvbERldmljZXMoZGF0YSwgand0KSlcbiAgfVxuXG5mdW5jdGlvbiBjb250cm9sRGV2aWNlcyhkZXZpY2VzLCBqd3Qpe1xuICAgIGNvbnNvbGUubG9nKGRldmljZXMpXG4gICAgZGV2aWNlcy5mb3JFYWNoKGVsZSA9PiB7XG4gICAgICBpZihlbGUuaWQgPT09IDEpe1xuICAgICAgICBpZihlbGUuY29tbWFuZHNbMF09PT0nb24nKXtcbiAgICAgICAgICBMRUQxLndyaXRlU3luYygxKVxuICAgICAgICAgIGdldERldmljZXMoand0KVxuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIExFRDEud3JpdGVTeW5jKDApXG4gICAgICAgICAgZ2V0RGV2aWNlcyhqd3QpXG4gICAgICAgIH1cbiAgICAgIH0gXG4gICAgICBpZihlbGUuaWQgPT09IDIpe1xuICAgICAgICBpZihlbGUuY29tbWFuZHNbMF09PT0nb24nKXtcbiAgICAgICAgICBMRUQxNy53cml0ZVN5bmMoMSlcbiAgICAgICAgICBnZXREZXZpY2VzKGp3dClcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBMRUQxNy53cml0ZVN5bmMoMClcbiAgICAgICAgICBnZXREZXZpY2VzKGp3dClcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgfSlcbiAgfSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log",
        "fetch",
        "require",
        "Gpio",
        "LED1",
        "LED17",
        "URL",
        "method",
        "headers",
        "Accept",
        "body",
        "JSON",
        "stringify",
        "user",
        "username",
        "password",
        "then",
        "r",
        "json",
        "data",
        "getDevices",
        "jwt",
        "config",
        "Authorization",
        "controlDevices",
        "devices",
        "forEach",
        "ele",
        "id",
        "commands",
        "writeSync"
      ],
      "mappings": ";;AAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AACA,IAAMC,KAAK,GAAGC,OAAO,CAAC,YAAD,CAArB;;AACA,IAAIC,IAAI,GAAGD,OAAO,CAAC,OAAD,CAAP,CAAiBC,IAA5B,C,CAAkC;;;AAClC,IAAIC,IAAI,GAAG,IAAID,IAAJ,CAAS,CAAT,EAAY,KAAZ,CAAX,C,CAA+B;;AAC/B,IAAIE,KAAK,GAAG,IAAIF,IAAJ,CAAS,EAAT,EAAa,KAAb,CAAZ;AACA,IAAMG,GAAG,GAAG,yCAAZ;AAGEL,KAAK,CAACK,GAAG,GAAG,OAAP,EAAgB;AACrBC,EAAAA,MAAM,EAAE,MADa;AAErBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,kBADT;AAETC,IAAAA,MAAM,EAAE;AAFC,GAFY;AAMrBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBC,IAAAA,IAAI,EAAE;AACJC,MAAAA,QAAQ,EAAE,IADN;AAEJC,MAAAA,QAAQ,EAAE;AAFN;AADa,GAAf;AANe,CAAhB,CAAL,CAaDC,IAbC,CAaI,UAAAC,CAAC;AAAA,SAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,CAbL,EAcDF,IAdC,CAcI,UAAAG,IAAI;AAAA,SAAIC,UAAU,CAACD,IAAI,CAACE,GAAN,CAAd;AAAA,CAdR;;AAgBF,SAASD,UAAT,CAAoBC,GAApB,EAAyB;AACrB,MAAIC,MAAM,GAAG;AACXf,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,OAAO,EAAE;AACP,sBAAgB,kBADT;AAEPC,MAAAA,MAAM,EAAE,kBAFD;AAGPc,MAAAA,aAAa,mBAAYF,GAAZ;AAHN;AAFE,GAAb;AAQApB,EAAAA,KAAK,CAACK,GAAG,GAAG,SAAP,EAAkBgB,MAAlB,CAAL,CACGN,IADH,CACQ,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,IAAF,EAAJ;AAAA,GADT,EAEGF,IAFH,CAES,UAAAG,IAAI;AAAA,WAAIK,cAAc,CAACL,IAAD,EAAOE,GAAP,CAAlB;AAAA,GAFb;AAGD;;AAEH,SAASG,cAAT,CAAwBC,OAAxB,EAAiCJ,GAAjC,EAAqC;AACjCtB,EAAAA,OAAO,CAACC,GAAR,CAAYyB,OAAZ;AACAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,GAAG,EAAI;AACrB,QAAGA,GAAG,CAACC,EAAJ,KAAW,CAAd,EAAgB;AACd,UAAGD,GAAG,CAACE,QAAJ,CAAa,CAAb,MAAkB,IAArB,EAA0B;AACxBzB,QAAAA,IAAI,CAAC0B,SAAL,CAAe,CAAf;AACAV,QAAAA,UAAU,CAACC,GAAD,CAAV;AACD,OAHD,MAGO;AACLjB,QAAAA,IAAI,CAAC0B,SAAL,CAAe,CAAf;AACAV,QAAAA,UAAU,CAACC,GAAD,CAAV;AACD;AACF;;AACD,QAAGM,GAAG,CAACC,EAAJ,KAAW,CAAd,EAAgB;AACd,UAAGD,GAAG,CAACE,QAAJ,CAAa,CAAb,MAAkB,IAArB,EAA0B;AACxBxB,QAAAA,KAAK,CAACyB,SAAN,CAAgB,CAAhB;AACAV,QAAAA,UAAU,CAACC,GAAD,CAAV;AACD,OAHD,MAGO;AACLhB,QAAAA,KAAK,CAACyB,SAAN,CAAgB,CAAhB;AACAV,QAAAA,UAAU,CAACC,GAAD,CAAV;AACD;AACF;AAEF,GApBD;AAqBD",
      "sourceRoot": "/home/pi/light-test/test/Vanillatest",
      "sourcesContent": [
        "console.log('Starting...')\nconst fetch = require('node-fetch');\nvar Gpio = require('onoff').Gpio; //include onoff to interact with the GPIO\nvar LED1 = new Gpio(4, 'out'); //use GPIO pin 4, and specify that it is output\nvar LED17 = new Gpio(17, 'out');\nconst URL = 'https://agile-reef-99245.herokuapp.com/'\n\n\n  fetch(URL + 'login', {\n  method: 'POST',\n  headers: {\n    'Content-Type': 'application/json',\n  Accept: 'application/json'\n  },\n  body: JSON.stringify({\n    user: {\n      username: 'Pi',\n      password: '1'\n    }\n  })\n})\n.then(r => r.json())\n.then(data => getDevices(data.jwt))\n\nfunction getDevices(jwt) {\n    let config = {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        Accept: 'application/json',\n        Authorization: `Bearer ${jwt}`\n      }\n    }\n    fetch(URL + 'devices', config)\n      .then(r => r.json())\n      .then (data => controlDevices(data, jwt))\n  }\n\nfunction controlDevices(devices, jwt){\n    console.log(devices)\n    devices.forEach(ele => {\n      if(ele.id === 1){\n        if(ele.commands[0]==='on'){\n          LED1.writeSync(1)\n          getDevices(jwt)\n        } else {\n          LED1.writeSync(0)\n          getDevices(jwt)\n        }\n      } \n      if(ele.id === 2){\n        if(ele.commands[0]==='on'){\n          LED17.writeSync(1)\n          getDevices(jwt)\n        } else {\n          LED17.writeSync(0)\n          getDevices(jwt)\n        }\n      }\n\n    })\n  }"
      ]
    },
    "sourceType": "script",
    "mtime": 1558485669448
  }
}