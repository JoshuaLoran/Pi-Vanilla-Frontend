{
  "{\"sourceRoot\":\"/home/pi/light-test/test/Vanillatest\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/pi/light-test/test/Vanillatest\",\"filename\":\"/home/pi/light-test/test/Vanillatest/index.js\",\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/pi/light-test/test/Vanillatest\",\"plugins\":[{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"loose\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ObjectMethod\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]},\"ClassMethod\":{\"exit\":[null]},\"ClassPrivateMethod\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.4.4": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/pi/light-test/test/Vanillatest",
      "caller": {
        "name": "@babel/register"
      },
      "cwd": "/home/pi/light-test/test/Vanillatest",
      "filename": "/home/pi/light-test/test/Vanillatest/index.js",
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/pi/light-test/test/Vanillatest",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "loose": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectMethod": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/pi/light-test/test/Vanillatest/index.js",
        "plugins": [
          "asyncGenerators",
          "objectRestSpread",
          "jsonStrings",
          "optionalCatchBinding"
        ]
      },
      "generatorOpts": {
        "filename": "/home/pi/light-test/test/Vanillatest/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/pi/light-test/test/Vanillatest",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nconsole.log('Starting...');\n\nvar WebSocketClient = require('websocket').client;\n\nvar client = new WebSocketClient();\n\nvar Gpio = require('onoff').Gpio; //include onoff to interact with the GPIO\n\n\nvar LED = new Gpio(4, 'out'); //use GPIO pin 4, and specify that it is output\n\nvar blinkInterval = setInterval(blinkLED, 250); //run the blinkLED function every 250ms\n\nclient.on('connectFailed', function (error) {\n  console.log('Connect Error: ' + error.toString());\n});\nclient.on('connect', function (connection) {\n  console.log('WebSocket Client Connected');\n  connection.on('error', function (error) {\n    console.log(\"Connection Error: \" + error.toString());\n  });\n  connection.on('close', function () {\n    console.log('Connection Closed');\n  });\n  connection.on('message', function (message) {\n    if (message.type === 'utf8') {\n      console.log(\"Received: '\" + message + \"'\");\n    }\n  });\n\n  function sendNumber() {\n    if (connection.connected) {\n      var number = Math.round(Math.random() * 0xFFFFFF);\n      connection.sendUTF(number);\n      setTimeout(sendNumber, 1000);\n    }\n  }\n\n  sendNumber();\n});\n\nfunction blinkLED() {\n  //function to start blinking\n  if (LED.readSync() === 0) {\n    //check the pin state, if the state is 0 (or off)\n    LED.writeSync(1); //set pin state to 1 (turn LED on)\n  } else {\n    LED.writeSync(0); //set pin state to 0 (turn LED off)\n  }\n}\n\nfunction endBlink() {\n  //function to stop blinking\n  clearInterval(blinkInterval); // Stop blink intervals\n\n  LED.writeSync(0); // Turn LED off\n\n  LED.unexport(); // Unexport GPIO to free resources\n}\n\nclient.connect('wss://agile-reef-99245.herokuapp.com/cable');\nsetTimeout(endBlink, 5000); //stop blinking after 5 seconds\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImNvbnNvbGUiLCJsb2ciLCJXZWJTb2NrZXRDbGllbnQiLCJyZXF1aXJlIiwiY2xpZW50IiwiR3BpbyIsIkxFRCIsImJsaW5rSW50ZXJ2YWwiLCJzZXRJbnRlcnZhbCIsImJsaW5rTEVEIiwib24iLCJlcnJvciIsInRvU3RyaW5nIiwiY29ubmVjdGlvbiIsIm1lc3NhZ2UiLCJ0eXBlIiwic2VuZE51bWJlciIsImNvbm5lY3RlZCIsIm51bWJlciIsIk1hdGgiLCJyb3VuZCIsInJhbmRvbSIsInNlbmRVVEYiLCJzZXRUaW1lb3V0IiwicmVhZFN5bmMiLCJ3cml0ZVN5bmMiLCJlbmRCbGluayIsImNsZWFySW50ZXJ2YWwiLCJ1bmV4cG9ydCIsImNvbm5lY3QiXSwibWFwcGluZ3MiOiI7O0FBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGFBQVo7O0FBRUEsSUFBSUMsZUFBZSxHQUFHQyxPQUFPLENBQUMsV0FBRCxDQUFQLENBQXFCQyxNQUEzQzs7QUFDQSxJQUFJQSxNQUFNLEdBQUcsSUFBSUYsZUFBSixFQUFiOztBQUNBLElBQUlHLElBQUksR0FBR0YsT0FBTyxDQUFDLE9BQUQsQ0FBUCxDQUFpQkUsSUFBNUIsQyxDQUFrQzs7O0FBQ2xDLElBQUlDLEdBQUcsR0FBRyxJQUFJRCxJQUFKLENBQVMsQ0FBVCxFQUFZLEtBQVosQ0FBVixDLENBQThCOztBQUM5QixJQUFJRSxhQUFhLEdBQUdDLFdBQVcsQ0FBQ0MsUUFBRCxFQUFXLEdBQVgsQ0FBL0IsQyxDQUFnRDs7QUFFaERMLE1BQU0sQ0FBQ00sRUFBUCxDQUFVLGVBQVYsRUFBMkIsVUFBU0MsS0FBVCxFQUFnQjtBQUN6Q1gsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksb0JBQW9CVSxLQUFLLENBQUNDLFFBQU4sRUFBaEM7QUFDRCxDQUZEO0FBSUFSLE1BQU0sQ0FBQ00sRUFBUCxDQUFVLFNBQVYsRUFBcUIsVUFBU0csVUFBVCxFQUFxQjtBQUN4Q2IsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksNEJBQVo7QUFDQVksRUFBQUEsVUFBVSxDQUFDSCxFQUFYLENBQWMsT0FBZCxFQUF1QixVQUFTQyxLQUFULEVBQWdCO0FBQ25DWCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSx1QkFBdUJVLEtBQUssQ0FBQ0MsUUFBTixFQUFuQztBQUNILEdBRkQ7QUFHQUMsRUFBQUEsVUFBVSxDQUFDSCxFQUFYLENBQWMsT0FBZCxFQUF1QixZQUFXO0FBQzlCVixJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWSxtQkFBWjtBQUNILEdBRkQ7QUFHQVksRUFBQUEsVUFBVSxDQUFDSCxFQUFYLENBQWMsU0FBZCxFQUF5QixVQUFTSSxPQUFULEVBQWtCO0FBQ3ZDLFFBQUlBLE9BQU8sQ0FBQ0MsSUFBUixLQUFpQixNQUFyQixFQUE2QjtBQUN6QmYsTUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQWdCYSxPQUFoQixHQUEwQixHQUF0QztBQUNIO0FBQ0osR0FKRDs7QUFNQSxXQUFTRSxVQUFULEdBQXNCO0FBQ2xCLFFBQUlILFVBQVUsQ0FBQ0ksU0FBZixFQUEwQjtBQUN0QixVQUFJQyxNQUFNLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXRCxJQUFJLENBQUNFLE1BQUwsS0FBZ0IsUUFBM0IsQ0FBYjtBQUNBUixNQUFBQSxVQUFVLENBQUNTLE9BQVgsQ0FBbUJKLE1BQW5CO0FBQ0FLLE1BQUFBLFVBQVUsQ0FBQ1AsVUFBRCxFQUFhLElBQWIsQ0FBVjtBQUNIO0FBQ0o7O0FBQ0RBLEVBQUFBLFVBQVU7QUFDWCxDQXRCRDs7QUF3QkEsU0FBU1AsUUFBVCxHQUFvQjtBQUFFO0FBQ3BCLE1BQUlILEdBQUcsQ0FBQ2tCLFFBQUosT0FBbUIsQ0FBdkIsRUFBMEI7QUFBRTtBQUMxQmxCLElBQUFBLEdBQUcsQ0FBQ21CLFNBQUosQ0FBYyxDQUFkLEVBRHdCLENBQ047QUFDbkIsR0FGRCxNQUVPO0FBQ0xuQixJQUFBQSxHQUFHLENBQUNtQixTQUFKLENBQWMsQ0FBZCxFQURLLENBQ2E7QUFDbkI7QUFDRjs7QUFFRCxTQUFTQyxRQUFULEdBQW9CO0FBQUU7QUFDcEJDLEVBQUFBLGFBQWEsQ0FBQ3BCLGFBQUQsQ0FBYixDQURrQixDQUNZOztBQUM5QkQsRUFBQUEsR0FBRyxDQUFDbUIsU0FBSixDQUFjLENBQWQsRUFGa0IsQ0FFQTs7QUFDbEJuQixFQUFBQSxHQUFHLENBQUNzQixRQUFKLEdBSGtCLENBR0Y7QUFDakI7O0FBR0R4QixNQUFNLENBQUN5QixPQUFQLENBQWUsNENBQWY7QUFDQU4sVUFBVSxDQUFDRyxRQUFELEVBQVcsSUFBWCxDQUFWLEMsQ0FBNEIiLCJzb3VyY2VSb290IjoiL2hvbWUvcGkvbGlnaHQtdGVzdC90ZXN0L1ZhbmlsbGF0ZXN0Iiwic291cmNlc0NvbnRlbnQiOlsiY29uc29sZS5sb2coJ1N0YXJ0aW5nLi4uJylcblxudmFyIFdlYlNvY2tldENsaWVudCA9IHJlcXVpcmUoJ3dlYnNvY2tldCcpLmNsaWVudDtcbnZhciBjbGllbnQgPSBuZXcgV2ViU29ja2V0Q2xpZW50KCk7XG52YXIgR3BpbyA9IHJlcXVpcmUoJ29ub2ZmJykuR3BpbzsgLy9pbmNsdWRlIG9ub2ZmIHRvIGludGVyYWN0IHdpdGggdGhlIEdQSU9cbnZhciBMRUQgPSBuZXcgR3Bpbyg0LCAnb3V0Jyk7IC8vdXNlIEdQSU8gcGluIDQsIGFuZCBzcGVjaWZ5IHRoYXQgaXQgaXMgb3V0cHV0XG52YXIgYmxpbmtJbnRlcnZhbCA9IHNldEludGVydmFsKGJsaW5rTEVELCAyNTApOyAvL3J1biB0aGUgYmxpbmtMRUQgZnVuY3Rpb24gZXZlcnkgMjUwbXNcblxuY2xpZW50Lm9uKCdjb25uZWN0RmFpbGVkJywgZnVuY3Rpb24oZXJyb3IpIHtcbiAgY29uc29sZS5sb2coJ0Nvbm5lY3QgRXJyb3I6ICcgKyBlcnJvci50b1N0cmluZygpKTtcbn0pO1xuXG5jbGllbnQub24oJ2Nvbm5lY3QnLCBmdW5jdGlvbihjb25uZWN0aW9uKSB7XG4gIGNvbnNvbGUubG9nKCdXZWJTb2NrZXQgQ2xpZW50IENvbm5lY3RlZCcpO1xuICBjb25uZWN0aW9uLm9uKCdlcnJvcicsIGZ1bmN0aW9uKGVycm9yKSB7XG4gICAgICBjb25zb2xlLmxvZyhcIkNvbm5lY3Rpb24gRXJyb3I6IFwiICsgZXJyb3IudG9TdHJpbmcoKSk7XG4gIH0pO1xuICBjb25uZWN0aW9uLm9uKCdjbG9zZScsIGZ1bmN0aW9uKCkge1xuICAgICAgY29uc29sZS5sb2coJ0Nvbm5lY3Rpb24gQ2xvc2VkJyk7XG4gIH0pO1xuICBjb25uZWN0aW9uLm9uKCdtZXNzYWdlJywgZnVuY3Rpb24obWVzc2FnZSkge1xuICAgICAgaWYgKG1lc3NhZ2UudHlwZSA9PT0gJ3V0ZjgnKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coXCJSZWNlaXZlZDogJ1wiICsgbWVzc2FnZSArIFwiJ1wiKTtcbiAgICAgIH1cbiAgfSk7XG4gIFxuICBmdW5jdGlvbiBzZW5kTnVtYmVyKCkge1xuICAgICAgaWYgKGNvbm5lY3Rpb24uY29ubmVjdGVkKSB7XG4gICAgICAgICAgdmFyIG51bWJlciA9IE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDB4RkZGRkZGKTtcbiAgICAgICAgICBjb25uZWN0aW9uLnNlbmRVVEYobnVtYmVyKTtcbiAgICAgICAgICBzZXRUaW1lb3V0KHNlbmROdW1iZXIsIDEwMDApO1xuICAgICAgfVxuICB9XG4gIHNlbmROdW1iZXIoKTtcbn0pO1xuXG5mdW5jdGlvbiBibGlua0xFRCgpIHsgLy9mdW5jdGlvbiB0byBzdGFydCBibGlua2luZ1xuICBpZiAoTEVELnJlYWRTeW5jKCkgPT09IDApIHsgLy9jaGVjayB0aGUgcGluIHN0YXRlLCBpZiB0aGUgc3RhdGUgaXMgMCAob3Igb2ZmKVxuICAgIExFRC53cml0ZVN5bmMoMSk7IC8vc2V0IHBpbiBzdGF0ZSB0byAxICh0dXJuIExFRCBvbilcbiAgfSBlbHNlIHtcbiAgICBMRUQud3JpdGVTeW5jKDApOyAvL3NldCBwaW4gc3RhdGUgdG8gMCAodHVybiBMRUQgb2ZmKVxuICB9XG59XG5cbmZ1bmN0aW9uIGVuZEJsaW5rKCkgeyAvL2Z1bmN0aW9uIHRvIHN0b3AgYmxpbmtpbmdcbiAgY2xlYXJJbnRlcnZhbChibGlua0ludGVydmFsKTsgLy8gU3RvcCBibGluayBpbnRlcnZhbHNcbiAgTEVELndyaXRlU3luYygwKTsgLy8gVHVybiBMRUQgb2ZmXG4gIExFRC51bmV4cG9ydCgpOyAvLyBVbmV4cG9ydCBHUElPIHRvIGZyZWUgcmVzb3VyY2VzXG59XG5cblxuY2xpZW50LmNvbm5lY3QoJ3dzczovL2FnaWxlLXJlZWYtOTkyNDUuaGVyb2t1YXBwLmNvbS9jYWJsZScpO1xuc2V0VGltZW91dChlbmRCbGluaywgNTAwMCk7IC8vc3RvcCBibGlua2luZyBhZnRlciA1IHNlY29uZHMiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "console",
        "log",
        "WebSocketClient",
        "require",
        "client",
        "Gpio",
        "LED",
        "blinkInterval",
        "setInterval",
        "blinkLED",
        "on",
        "error",
        "toString",
        "connection",
        "message",
        "type",
        "sendNumber",
        "connected",
        "number",
        "Math",
        "round",
        "random",
        "sendUTF",
        "setTimeout",
        "readSync",
        "writeSync",
        "endBlink",
        "clearInterval",
        "unexport",
        "connect"
      ],
      "mappings": ";;AAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;;AAEA,IAAIC,eAAe,GAAGC,OAAO,CAAC,WAAD,CAAP,CAAqBC,MAA3C;;AACA,IAAIA,MAAM,GAAG,IAAIF,eAAJ,EAAb;;AACA,IAAIG,IAAI,GAAGF,OAAO,CAAC,OAAD,CAAP,CAAiBE,IAA5B,C,CAAkC;;;AAClC,IAAIC,GAAG,GAAG,IAAID,IAAJ,CAAS,CAAT,EAAY,KAAZ,CAAV,C,CAA8B;;AAC9B,IAAIE,aAAa,GAAGC,WAAW,CAACC,QAAD,EAAW,GAAX,CAA/B,C,CAAgD;;AAEhDL,MAAM,CAACM,EAAP,CAAU,eAAV,EAA2B,UAASC,KAAT,EAAgB;AACzCX,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBU,KAAK,CAACC,QAAN,EAAhC;AACD,CAFD;AAIAR,MAAM,CAACM,EAAP,CAAU,SAAV,EAAqB,UAASG,UAAT,EAAqB;AACxCb,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAAZ;AACAY,EAAAA,UAAU,CAACH,EAAX,CAAc,OAAd,EAAuB,UAASC,KAAT,EAAgB;AACnCX,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBU,KAAK,CAACC,QAAN,EAAnC;AACH,GAFD;AAGAC,EAAAA,UAAU,CAACH,EAAX,CAAc,OAAd,EAAuB,YAAW;AAC9BV,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,GAFD;AAGAY,EAAAA,UAAU,CAACH,EAAX,CAAc,SAAd,EAAyB,UAASI,OAAT,EAAkB;AACvC,QAAIA,OAAO,CAACC,IAAR,KAAiB,MAArB,EAA6B;AACzBf,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBa,OAAhB,GAA0B,GAAtC;AACH;AACJ,GAJD;;AAMA,WAASE,UAAT,GAAsB;AAClB,QAAIH,UAAU,CAACI,SAAf,EAA0B;AACtB,UAAIC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,QAA3B,CAAb;AACAR,MAAAA,UAAU,CAACS,OAAX,CAAmBJ,MAAnB;AACAK,MAAAA,UAAU,CAACP,UAAD,EAAa,IAAb,CAAV;AACH;AACJ;;AACDA,EAAAA,UAAU;AACX,CAtBD;;AAwBA,SAASP,QAAT,GAAoB;AAAE;AACpB,MAAIH,GAAG,CAACkB,QAAJ,OAAmB,CAAvB,EAA0B;AAAE;AAC1BlB,IAAAA,GAAG,CAACmB,SAAJ,CAAc,CAAd,EADwB,CACN;AACnB,GAFD,MAEO;AACLnB,IAAAA,GAAG,CAACmB,SAAJ,CAAc,CAAd,EADK,CACa;AACnB;AACF;;AAED,SAASC,QAAT,GAAoB;AAAE;AACpBC,EAAAA,aAAa,CAACpB,aAAD,CAAb,CADkB,CACY;;AAC9BD,EAAAA,GAAG,CAACmB,SAAJ,CAAc,CAAd,EAFkB,CAEA;;AAClBnB,EAAAA,GAAG,CAACsB,QAAJ,GAHkB,CAGF;AACjB;;AAGDxB,MAAM,CAACyB,OAAP,CAAe,4CAAf;AACAN,UAAU,CAACG,QAAD,EAAW,IAAX,CAAV,C,CAA4B",
      "sourceRoot": "/home/pi/light-test/test/Vanillatest",
      "sourcesContent": [
        "console.log('Starting...')\n\nvar WebSocketClient = require('websocket').client;\nvar client = new WebSocketClient();\nvar Gpio = require('onoff').Gpio; //include onoff to interact with the GPIO\nvar LED = new Gpio(4, 'out'); //use GPIO pin 4, and specify that it is output\nvar blinkInterval = setInterval(blinkLED, 250); //run the blinkLED function every 250ms\n\nclient.on('connectFailed', function(error) {\n  console.log('Connect Error: ' + error.toString());\n});\n\nclient.on('connect', function(connection) {\n  console.log('WebSocket Client Connected');\n  connection.on('error', function(error) {\n      console.log(\"Connection Error: \" + error.toString());\n  });\n  connection.on('close', function() {\n      console.log('Connection Closed');\n  });\n  connection.on('message', function(message) {\n      if (message.type === 'utf8') {\n          console.log(\"Received: '\" + message + \"'\");\n      }\n  });\n  \n  function sendNumber() {\n      if (connection.connected) {\n          var number = Math.round(Math.random() * 0xFFFFFF);\n          connection.sendUTF(number);\n          setTimeout(sendNumber, 1000);\n      }\n  }\n  sendNumber();\n});\n\nfunction blinkLED() { //function to start blinking\n  if (LED.readSync() === 0) { //check the pin state, if the state is 0 (or off)\n    LED.writeSync(1); //set pin state to 1 (turn LED on)\n  } else {\n    LED.writeSync(0); //set pin state to 0 (turn LED off)\n  }\n}\n\nfunction endBlink() { //function to stop blinking\n  clearInterval(blinkInterval); // Stop blink intervals\n  LED.writeSync(0); // Turn LED off\n  LED.unexport(); // Unexport GPIO to free resources\n}\n\n\nclient.connect('wss://agile-reef-99245.herokuapp.com/cable');\nsetTimeout(endBlink, 5000); //stop blinking after 5 seconds"
      ]
    },
    "sourceType": "script",
    "mtime": 1558461682557
  }
}